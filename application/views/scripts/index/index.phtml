<?php
// The following script block transfers module settings or configurations to JavaScript
?>

<div class="controls">
    <?php 
    // Tabs or navigation can be added here if necessary
    ?>
</div>

<div class="content">
    <div id="clustergraph-container" class="clustergraph">
        <!-- The D3.js graph will be rendered inside this container -->
    </div>
    
    <script src="https://d3js.org/d3.v6.min.js"></script>

    <script type="text/javascript" defer>
        // Example: Passing PHP variables or settings to JavaScript. Adapt as needed.
        <?php
        // echo 'var exampleSetting = ' . $this->exampleSetting . ";\n";
        ?>

        // Translation (if necessary)
        <?php
        $toTranslate = array(
            // Add any strings that need translation here
            // "exampleKey" => "Example String"
        );

        print("var translation = {");
        foreach ($toTranslate as $key => $value) {
            printf("'%s': '%s',", $key, $this->translate($value));
        }
        print("};\n");
        ?>

        document.addEventListener("DOMContentLoaded", function() {
            const width = 928;
            
            function chart(data) {
                const root = d3.hierarchy(data);
                const dx = 40;
                const dy = width / (root.height + 1);
                const tree = d3.tree().nodeSize([dx, dy]);
                root.sort((a, b) => d3.ascending(a.data.name, b.data.name));
                tree(root);

                let x0 = Infinity;
                let x1 = -x0;
                root.each(d => {
                    if (d.x > x1) x1 = d.x;
                    if (d.x < x0) x0 = d.x;
                });

                const height = x1 - x0 + dx * 2;

                const svg = d3.create("svg")
                    .attr("width", width)
                    .attr("height", height)
                    .attr("viewBox", [-dy / 3, x0 - dx, width, height])
                    .attr("style", "max-width: 100%; height: auto; font: 10px sans-serif;");

                const link = svg.append("g")
                    .attr("fill", "none")
                    .attr("stroke", "#555")
                    .attr("stroke-opacity", 0.4)
                    .attr("stroke-width", 1.5)
                    .selectAll()
                    .data(root.links())
                    .join("path")
                    .attr("d", d3.linkHorizontal()
                        .x(d => d.y)
                        .y(d => d.x));

                const node = svg.append("g")
                    .attr("stroke-linejoin", "round")
                    .attr("stroke-width", 3)
                    .selectAll()
                    .data(root.descendants())
                    .join("g")
                    .attr("transform", d => `translate(${d.y},${d.x})`);

                node.append("circle")
                    .attr("fill", d => d.children ? "#555" : "#999")
                    .attr("r", 2);

                node.append("text")
                    .attr("dy", "0.5em")
                    .attr("x", d => d.children ? -8 : 8)
                    .attr("text-anchor", d => d.children ? "end" : "start")
                    .text(d => d.data.name)
                    .clone(true).lower()
                    .attr("stroke", "white");

                // Append endpoint text below the zone name
                node.append("text")
                    .attr("dy", "2em")
                    .attr("x", d => d.children ? -6 : 6)
                    .attr("text-anchor", "middle")
                    .attr("fill", "#ffffff")
                    .text(d => {
                        const endpointText = d.data.endpoints ? d.data.endpoints.join(", ") : "";
                        return endpointText;
                    });

                return svg.node();
            }

            fetch("/icingaweb2/clustergraph/index/data")
                .then(response => response.json())
                .then(data => {
                    document.getElementById('clustergraph-container').append(chart(data));
                });
        });
    </script>
</div>

<style>
    /* CSS styles for the clustergraph */
    .clustergraph {
        max-width: 100%; 
        height: auto; 
        overflow: auto; // To handle larger graphs
        margin: 10px 0; // Example spacing
    }

    .clustergraph svg {
        font-family: "Arial", sans-serif;
    font-size: 10px;
    font-weight: normal;
    text-decoration: none;
    text-rendering: optimizeLegibility;
    }




</style>

